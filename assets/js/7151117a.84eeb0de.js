"use strict";(self.webpackChunkcontexify_doc=self.webpackChunkcontexify_doc||[]).push([[314],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return p}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),c=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=c(e.components);return a.createElement(u.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(t),p=r,f=d["".concat(u,".").concat(p)]||d[p]||m[p]||i;return t?a.createElement(f,o(o({ref:n},s),{},{components:t})):a.createElement(f,o({ref:n},s))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:function(e,n,t){t.d(n,{Z:function(){return o}});var a=t(7294),r=t(6010),i="tabItem_Ymn6";function o(e){var n=e.children,t=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,o),hidden:t},n)}},5488:function(e,n,t){t.d(n,{Z:function(){return p}});var a=t(7462),r=t(7294),i=t(6010),o=t(2389),l=t(7392),u=t(7094),c=t(2466),s="tabList__CuJ",m="tabItem_LNqP";function d(e){var n,t,o=e.lazy,d=e.block,p=e.defaultValue,f=e.values,h=e.groupId,v=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=f?f:k.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),b=(0,l.l)(y,(function(e,n){return e.value===n.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var I=null===p?p:null!=(n=null!=p?p:null==(t=k.find((function(e){return e.props.default})))?void 0:t.props.value)?n:k[0].props.value;if(null!==I&&!y.some((function(e){return e.value===I})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+I+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,u.U)(),C=g.tabGroupChoices,w=g.setTabGroupChoices,N=(0,r.useState)(I),x=N[0],E=N[1],T=[],M=(0,c.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var O=C[h];null!=O&&O!==x&&y.some((function(e){return e.value===O}))&&E(O)}var j=function(e){var n=e.currentTarget,t=T.indexOf(n),a=y[t].value;a!==x&&(M(n),E(a),null!=h&&w(h,String(a)))},D=function(e){var n,t=null;switch(e.key){case"Enter":j(e);break;case"ArrowRight":var a,r=T.indexOf(e.currentTarget)+1;t=null!=(a=T[r])?a:T[0];break;case"ArrowLeft":var i,o=T.indexOf(e.currentTarget)-1;t=null!=(i=T[o])?i:T[T.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",s)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},v)},y.map((function(e){var n=e.value,t=e.label,o=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:x===n?0:-1,"aria-selected":x===n,key:n,ref:function(e){return T.push(e)},onKeyDown:D,onClick:j},o,{className:(0,i.Z)("tabs__item",m,null==o?void 0:o.className,{"tabs__item--active":x===n})}),null!=t?t:n)}))),o?(0,r.cloneElement)(k.filter((function(e){return e.props.value===x}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==x})}))))}function p(e){var n=(0,o.Z)();return r.createElement(d,(0,a.Z)({key:String(n)},e))}},214:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return p}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),o=t(5488),l=t(5162),u=["components"],c={id:"handle-item-click",title:"Handle Item click"},s=void 0,m={unversionedId:"handle-item-click",id:"handle-item-click",title:"Handle Item click",description:"Handling Item click/touch is at the core of react-contexify. When an Item is clicked, the callback gives you access to the following parameters:",source:"@site/docs/handle-item-click.md",sourceDirName:".",slug:"/handle-item-click",permalink:"/react-contexify/handle-item-click",draft:!1,editUrl:"https://github.com/fkhadra/react-contexify-doc/edit/master/docs/handle-item-click.md",tags:[],version:"current",frontMatter:{id:"handle-item-click",title:"Handle Item click"},sidebar:"someSidebar",previous:{title:"Migrate to v6 \ud83d\ude80",permalink:"/react-contexify/migrate"},next:{title:"Add keyboard shortcut",permalink:"/react-contexify/add-keyboard-shortcut"}},d={},p=[],f={toc:p};function h(e){var n=e.components,t=(0,r.Z)(e,u);return(0,i.kt)("wrapper",(0,a.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Handling ",(0,i.kt)("inlineCode",{parentName:"p"},"Item")," click/touch is at the core of react-contexify. When an ",(0,i.kt)("inlineCode",{parentName:"p"},"Item")," is clicked, the callback gives you access to the following parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"id")," The item id when defined"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"event")," The event that occurred on the Item node"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"props")," The props passed when you called ",(0,i.kt)("inlineCode",{parentName:"li"},"show({event: e, props: yourProps})")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"data")," The data defined on the ",(0,i.kt)("inlineCode",{parentName:"li"},"Item")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"triggerEvent")," The event that triggered the context menu")),(0,i.kt)("p",null,"This gives you a lot of power to implement your logic. The trade-off is that we have now multiple ways to handle the interaction with our Menu. "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"you could use one handler per ",(0,i.kt)("inlineCode",{parentName:"li"},"Item")),(0,i.kt)("li",{parentName:"ul"},"a single function to handle all ",(0,i.kt)("inlineCode",{parentName:"li"},"Items")),(0,i.kt)("li",{parentName:"ul"},"identify an ",(0,i.kt)("inlineCode",{parentName:"li"},"Item")," using the ",(0,i.kt)("inlineCode",{parentName:"li"},"data")," props"),(0,i.kt)("li",{parentName:"ul"},"identity an ",(0,i.kt)("inlineCode",{parentName:"li"},"Item")," using the ",(0,i.kt)("inlineCode",{parentName:"li"},"id")," attribute")),(0,i.kt)("p",null,'You may ask yourself, "Which solution should I use?". Well, it depends. Now before you hate me let me explain myself \ud83e\udd23.'),(0,i.kt)("p",null,"Choose the approach that matches your needs and the easier to understand for you and your team. I tried my best to make every developer happy and confident, hence the flexibility.  "),(0,i.kt)("p",null,"I'll describe the one I've used in the demo. Pay attention to the comments."),(0,i.kt)(o.Z,{groupId:"lang",defaultValue:"js",values:[{label:"Javascript",value:"js"},{label:"Typescript",value:"ts"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"js",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useContextMenu, Menu, Item, Separator } from "react-contexify";\n\nconst MENU_ID = "\ud83d\udca9";\n\nexport function Demo() {\n  const { show } = useContextMenu({\n    id: MENU_ID,\n  });\n\n  function displayMenu(e) {\n    show({event: e, props: { key: "value" }});\n  }\n\n  function handleItemClick({ id, props, data, triggerEvent }) {\n    // \u26a0\ufe0f data and triggerEvent are not used. I\'ve just added them so we have the full list of parameters\n\n    // I use the id attribute defined on the `Item` to identify which one is it\n    // this feel natural to my brain\n    switch (id) {\n      case "remove":\n        // logic to remove the row\n        break;\n      case "share":\n        // logic to share\n        break;\n      case "email":\n        //logic to send email\n        break;\n      case "sponsor":\n        //logic to open sponsor page\n        break;\n    }\n  }\n\n  return (\n    <div>\n      <ul>\n        {items.map((item) => (\n          <li id={`${item.id}`} key={item.id} onContextMenu={displayMenu}>\n            {/* render content of my list item */}\n          </li>\n        ))}\n      </ul>\n      <Menu id={MENU_ID}>\n        <Item id="remove" onClick={handleItemClick}>\n          Remove row\n        </Item>\n        <Separator />\n        <Item id="share" onClick={handleItemClick}>\n          Share\n        </Item>\n        <Item\n          id="email"\n          onClick={handleItemClick}\n          className={styles.itemContent}\n        >\n          Send email\n        </Item>\n        <Item id="sponsor" onClick={handleItemClick}>\n          Sponsor my work\n        </Item>\n      </Menu>\n    </div>\n  );\n}\n'))),(0,i.kt)(l.Z,{value:"ts",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n  useContextMenu,\n  Menu,\n  Item,\n  Separator,\n  ItemParams,\n} from "react-contexify";\n\n// I really used that emoji for my menu id \ud83e\udd23\nconst MENU_ID = "\ud83d\udca9";\n\n// Define an interface for the props that I\'ll pass to the Item\ninterface ItemProps {\n  key: string;\n}\n\n// Defined just for documentation purpose\ntype ItemData = any;\n\nexport function Demo() {\n  const { show } = useContextMenu({\n    id: MENU_ID,\n  });\n\n  function displayMenu(e: React.MouseEvent) {\n    // pass the item id so the `onClick` on the `Item` has access to it\n    show({event: e, props: { key: "some value" } });\n  }\n\n  function handleItemClick({\n    id,\n    event,\n    props,\n    data,\n    triggerEvent,\n  }: ItemParams<ItemProps, ItemData>) {\n    // \u26a0\ufe0f data and triggerEvent are not used. I\'ve just added them so we have the full list of parameters\n\n    // I use the id attribute defined on the `Item` to identify which one is it\n    // this feel natural to my brain\n    switch (id) {\n      case "remove":\n        // logic to remove the row\n        break;\n      case "share":\n        // logic to share\n        break;\n      case "email":\n        //logic to send email\n        break;\n      case "sponsor":\n        //logic to open sponsor page\n        break;\n    }\n  }\n\n  return (\n    <div>\n      <ul>\n        {items.map((item) => (\n          <li id={`${item.id}`} key={item.id} onContextMenu={displayMenu}>\n            {/* render content of my list item */}\n          </li>\n        ))}\n      </ul>\n      <Menu id={MENU_ID}>\n        <Item id="remove" onClick={handleItemClick}>\n          Remove row\n        </Item>\n        <Separator />\n        <Item id="share" onClick={handleItemClick}>\n          Share\n        </Item>\n        <Item\n          id="email"\n          onClick={handleItemClick}\n          className={styles.itemContent}\n        >\n          Send email\n        </Item>\n        <Item id="sponsor" onClick={handleItemClick}>\n          Sponsor my work\n        </Item>\n      </Menu>\n    </div>\n  );\n}\n\n')))))}h.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkcontexify_doc=self.webpackChunkcontexify_doc||[]).push([[516],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return d}});var i=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=i.createContext({}),c=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},m=function(e){var n=c(e.components);return i.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=c(t),d=o,f=p["".concat(s,".").concat(d)]||p[d]||u[d]||a;return t?i.createElement(f,r(r({ref:n},m),{},{components:t})):i.createElement(f,r({ref:n},m))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,r=new Array(a);r[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var c=2;c<a;c++)r[c]=t[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4022:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var i=t(7462),o=t(3366),a=(t(7294),t(3905)),r=["components"],l={id:"how-to-style",title:"How to style"},s=void 0,c={unversionedId:"how-to-style",id:"how-to-style",title:"How to style",description:"Use css variables",source:"@site/docs/how-to-style.md",sourceDirName:".",slug:"/how-to-style",permalink:"/react-contexify/how-to-style",draft:!1,editUrl:"https://github.com/fkhadra/react-contexify-doc/edit/master/docs/how-to-style.md",tags:[],version:"current",frontMatter:{id:"how-to-style",title:"How to style"},sidebar:"someSidebar",previous:{title:"Set a custom position",permalink:"/react-contexify/set-a-custom-position"},next:{title:"Change Submenu arrow",permalink:"/react-contexify/change-submenu-arrow"}},m={},u=[{value:"Use css variables",id:"use-css-variables",level:2},{value:"Override existing css classes",id:"override-existing-css-classes",level:2},{value:"Build your own style using the scss files",id:"build-your-own-style-using-the-scss-files",level:2},{value:"Passing css classes or inline style to component",id:"passing-css-classes-or-inline-style-to-component",level:2},{value:"Style with styled-components",id:"style-with-styled-components",level:2},{value:"Built-in theme",id:"built-in-theme",level:2},{value:"Create your own theme",id:"create-your-own-theme",level:2},{value:"Built-in animation",id:"built-in-animation",level:2},{value:"Disable animations",id:"disable-animations",level:3},{value:"Disable only enter or exit animation",id:"disable-only-enter-or-exit-animation",level:3},{value:"Combining animation",id:"combining-animation",level:3},{value:"Create your own animation",id:"create-your-own-animation",level:2}],p={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,r);return(0,a.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"use-css-variables"},"Use css variables"),(0,a.kt)("p",null,"By overriding the css variables you should be able to find a design that match your taste "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"  --contexify-zIndex: 666;\n  --contexify-menu-minWidth: 220px;\n  --contexify-menu-padding: 6px;\n  --contexify-menu-radius: 6px;\n  --contexify-menu-bgColor: #fff;\n  --contexify-menu-shadow: 1px 2px 2px rgba(0, 0, 0, 0.1),\n  2px 4px 4px rgba(0, 0, 0, 0.1),\n  3px 6px 6px rgba(0, 0, 0, 0.1);\n  --contexify-menu-negatePadding: var(--contexify-menu-padding);\n\n  --contexify-separator-color: rgba(0, 0, 0, 0.2);\n  --contexify-separator-margin: 5px;\n  --contexify-itemContent-padding: 6px;\n  --contexify-activeItem-radius: 4px;\n  --contexify-item-color: #333;\n  --contexify-activeItem-color: #fff;\n  --contexify-activeItem-bgColor: #3498db;\n  --contexify-rightSlot-color: #6f6e77;\n  --contexify-activeRightSlot-color: #fff;\n  --contexify-arrow-color: #6f6e77;\n  --contexify-activeArrow-color: #fff;\n")),(0,a.kt)("h2",{id:"override-existing-css-classes"},"Override existing css classes"),(0,a.kt)("p",null,"Below, a list of the CSS classes used(classes used for animation and theme are omitted)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},".contexify {}\n\n.contexify__submenu--is-open,\n.contexify__submenu--is-open > .contexify__item__content {}\n\n.contexify__submenu--is-open > .contexify__submenu {}\n\n.contexify .contexify__submenu {}\n\n.contexify__submenu-arrow {}\n\n.contexify__separator {}\n\n.contexify__will-leave--disabled {}\n\n.contexify__item {}\n\n.contexify__item:not(.contexify__item--disabled):focus {}\n\n.contexify__item:not(.contexify__item--disabled):hover > .contexify__item__content,\n.contexify__item:not(.contexify__item--disabled):focus > .contexify__item__content {}\n\n.contexify__item:not(.contexify__item--disabled):hover > .contexify__submenu {}\n\n.contexify__item--disabled {}\n\n.contexify__item__content {}\n\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"I believe that the class names are self-explanatory. If it's not the case for you, please feel free to open a PR. Any contribution is appreciated.")),(0,a.kt)("h2",{id:"build-your-own-style-using-the-scss-files"},"Build your own style using the scss files"),(0,a.kt)("p",null,"Grab the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/fkhadra/contexify/tree/master/scss"},"scss directory")," of the repository and build your own stylesheet. This also a good way to reduce the size of the css by removing the animations/themes that you are not using."),(0,a.kt)("h2",{id:"passing-css-classes-or-inline-style-to-component"},"Passing css classes or inline style to component"),(0,a.kt)("p",null,"All components accept the ",(0,a.kt)("inlineCode",{parentName:"p"},"className")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"style")," props."),(0,a.kt)("h2",{id:"style-with-styled-components"},"Style with styled-components"),(0,a.kt)("p",null,"You can override the css classes with ",(0,a.kt)("inlineCode",{parentName:"p"},"styled-components"),". You can find the list of the css classes used ",(0,a.kt)("a",{parentName:"p",href:"/how-to-style#override-existing-css-classes"},"here"),". "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import styled from 'styled-components';\nimport { Menu } from 'contexify';\n\nconst StyledMenu = styled(Menu).attrs({\n  // custom props\n})`\n  .contexify_submenu-arrow {}\n  .contexify_separator {}\n  .contexify_item {}\n`;\n")),(0,a.kt)("h2",{id:"built-in-theme"},"Built-in theme"),(0,a.kt)("p",null,"The library provides 2 ",(0,a.kt)("inlineCode",{parentName:"p"},"themes")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"light"),(0,a.kt)("li",{parentName:"ul"},"dark")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Menu, Item } from \'contexify\';\n\n\nfunction LightMenu(){\n  return (\n    <Menu id="menuId" theme="light">\n      <Item>Item 1</Item> \n      <Item>Item 2</Item> \n      <Item>Item 3</Item> \n    </Menu>\n  )\n}\n\nfunction DarkMenu(){\n  return (\n    <Menu id="menuId" theme="dark">\n      <Item>Item 1</Item> \n      <Item>Item 2</Item> \n      <Item>Item 3</Item> \n    </Menu>\n  )\n}\n\n')),(0,a.kt)("h2",{id:"create-your-own-theme"},"Create your own theme"),(0,a.kt)("p",null,"When you pass a ",(0,a.kt)("inlineCode",{parentName:"p"},"theme")," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Menu")," component, the value is appended to ",(0,a.kt)("inlineCode",{parentName:"p"},".contexify_theme-{YOUR_THEME}"),". This combined with the power of css\nvariables give us a lot of flexibility."),(0,a.kt)("p",null,"For example, this is what the dark theme looks like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},".contexify_theme-dark {\n  --contexify-menu-bgColor: rgba(40, 40, 40, 0.98);\n  --contexify-separator-color: #4c4c4c;\n  --contexify-item-color: #fff;\n}\n")),(0,a.kt)("h2",{id:"built-in-animation"},"Built-in animation"),(0,a.kt)("p",null,"The library provides 4 animations:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"fade (default one)"),(0,a.kt)("li",{parentName:"ul"},"flip"),(0,a.kt)("li",{parentName:"ul"},"scale "),(0,a.kt)("li",{parentName:"ul"},"slide")),(0,a.kt)("admonition",{type:"important"},(0,a.kt)("p",{parentName:"admonition"},"The animation is applied when the ",(0,a.kt)("inlineCode",{parentName:"p"},"Menu")," enters and when it exit.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Menu, Item, animation } from \'contexify\';\n\nfunction FadeMenu(){\n  return (\n    <Menu id="menuId" animation="fade">\n      <Item>Item 1</Item> \n      <Item>Item 2</Item> \n    </Menu>\n  )\n}\n\nfunction FlipMenu(){\n  return (\n    <Menu id="menuId" animation="flip">\n      <Item>Item 1</Item> \n      <Item>Item 2</Item> \n    </Menu>\n  )\n}\n\nfunction ScaleMenu(){\n  return (\n    <Menu id="menuId" animation="scale">\n    {/* Same as not setting animation */}\n      <Item>Item 1</Item> \n      <Item>Item 2</Item> \n    </Menu>\n  )\n}\n\nfunction SlideMenu(){\n  return (\n    <Menu id="menuId" animation="slide">\n      <Item>Item 1</Item> \n      <Item>Item 2</Item> \n    </Menu>\n  )\n}\n\n')),(0,a.kt)("h3",{id:"disable-animations"},"Disable animations"),(0,a.kt)("p",null,"To disable the animation, set the ",(0,a.kt)("inlineCode",{parentName:"p"},"animation")," props to ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"<Menu animation={false}>\n")),(0,a.kt)("p",null,"This will disable both ",(0,a.kt)("inlineCode",{parentName:"p"},"enter")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"exit")," animation."),(0,a.kt)("h3",{id:"disable-only-enter-or-exit-animation"},"Disable only enter or exit animation"),(0,a.kt)("p",null,"You can choose which animation to disable. To do so, you need to pass an ",(0,a.kt)("inlineCode",{parentName:"p"},"object")," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"animation")," props. Let's disable the ",(0,a.kt)("inlineCode",{parentName:"p"},"enter")," animation only."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Menu animation={{ enter: false, exit: "fade" }}>\n')),(0,a.kt)("p",null,"You get the idea \ud83d\ude04."),(0,a.kt)("h3",{id:"combining-animation"},"Combining animation"),(0,a.kt)("p",null,"What if you want to have different ",(0,a.kt)("inlineCode",{parentName:"p"},"animation")," when the Menu ",(0,a.kt)("inlineCode",{parentName:"p"},"enter")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"exit")," \ud83e\udd14 ? Well, this is also possible! You even already know how to do that. "),(0,a.kt)("p",null,"Let's use the ",(0,a.kt)("inlineCode",{parentName:"p"},"fade")," animation when entering and the ",(0,a.kt)("inlineCode",{parentName:"p"},"flip")," animation when leaving!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Menu animation={{ enter: "fade", exit: "flip" }}>\n')),(0,a.kt)("h2",{id:"create-your-own-animation"},"Create your own animation"),(0,a.kt)("p",null,"When you pass an ",(0,a.kt)("inlineCode",{parentName:"p"},"animation")," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Menu")," component, the value is appended to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".contexify_willEnter-{YOUR_VALUE}")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".contexify_willLeave-{YOUR_VALUE}"))),(0,a.kt)("p",null,"For example, this is what the scale animation looks like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-css"},"@keyframes contexify_scaleIn {\n  from {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n  to {\n    opacity: 1;\n  }\n}\n@keyframes contexify_scaleOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n    transform: scale3d(0.3, 0.3, 0.3);\n  }\n}\n.contexify_willEnter-scale {\n  transform-origin: top left;\n  animation: contexify__scaleIn 0.3s;\n}\n\n.contexify_willLeave-scale {\n  transform-origin: top left;\n  animation: contexify__scaleOut 0.3s;\n}\n")),(0,a.kt)("p",null,"As you can see it's easy to build yours as well."))}d.isMDXComponent=!0}}]);